name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  cabal:
    name: cabal / ghc-${{ matrix.ghc }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macOS-latest
        cabal: ["latest"]
        ghc:
          - "8.8.4"
          - "8.10.7"
          - "9.0.2"

    steps:
    - uses: actions/checkout@v2
      #if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Update apt
      run: sudo apt-get update

    - name: Install Required System Packages
      run: sudo apt-get install gobject-introspection libgirepository1.0-dev libgtk-3-dev libvte-2.91-dev libpcre2-dev

    - name: Build
      run: |
        cabal update
        cabal build all --enable-tests --enable-benchmarks --write-ghc-environment-files=always
    - name: Test
      run: |
        cabal test all --enable-tests

  stack:
    name: stack ${{ matrix.resolver }} / ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["latest"]
        resolver:
          - "--stack-yaml ./stack.yaml" # Stackage LTS
          - "--stack-yaml ./stack-nightly.yaml" # Stackage Nightly

    steps:
    - uses: actions/checkout@v2
      #if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v1
      name: Setup Haskell Stack
      with:
        stack-version: ${{ matrix.stack }}
        enable-stack: true

    - uses: actions/cache@v1
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-${{ matrix.resolver }}

    - name: Update apt
      run: sudo apt-get update

    - name: Install Required System Packages
      run: sudo apt-get install gobject-introspection libgirepository1.0-dev libgtk-3-dev libvte-2.91-dev libpcre2-dev

    - name: Build
      run: |
        stack ${{ matrix.resolver }} build --test --bench --no-run-tests --no-run-benchmarks --flag termonad:buildexamples
    - name: Test
      run: |
        stack ${{ matrix.resolver }} test --flag termonad:buildexamples

  nix:
    name: nix / ubuntu-latest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-build
    - run: nix-build shell.nix

  nix-flakes:
    name: nix flakes / ubuntu-latest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v13
      with:
        # This is taken from https://github.com/ngi-nix/summer-of-nix/blob/master/2021/snippets-and-templates/github-actions.yml
        install_url: https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.4pre20210604_8e6ee1b/install
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix flake show
    - run: nix build
    - run: nix flake check
    - run: nix build .#devShell.x86_64-linux
